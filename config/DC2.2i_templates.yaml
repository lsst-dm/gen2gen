# The setup to load up the stack
setup: |
  # Setup LSST stack for {week}
  # export LSST_CONDA_ENV_NAME=my-env
  # .  /software/lsstsw/stack/loadLSST.bash
  # setup lsst_distrib -t {week}

gitcloner: |
  # Clone modules
  CWD=$(pwd)
  mkdir -p {gitpath}

  cd {gitpath}
  # git clone https://github.com/lsst-dm/qa_explorer
  git clone https://github.com/lsst-dm/pipe_analysis

  cd $CWD

builder: |
  # Make sure you run this before building:
  # scl enable devtoolset-8 bash

  # echo "---------------------------------"
  # echo " Make sure you run this before:"
  # echo "  scl enable devtoolset-8 bash"
  # echo "---------------------------------"

  {setup}

  CWD=$(pwd)

  # cd {gitpath}/qa_explorer
  # scons

  cd {gitpath}/pipe_analysis
  scons
  cd $CWD

templates:

  singleFrameDriver: >
    singleFrameDriver.py /datasets/DC2/repoRun2.2i --rerun {rerun}/sfm --batch-type slurm
    --mpiexec='-bind-to socket' --job {jobname} --cores 24 --time 900  --id visit={visit} --configfile /home/$USER/HSC/DC2/filter_config_2021_12.py;

  makeSkyMap: >
    makeSkyMap.py /datasets/DC2/repoRun2.2i --rerun {rerun}/sfm --no-versions >& log_makeSkyMap_{weeknumber}

  coaddDriver:
    head_task: |
      #!/bin/bash -l
    multi: >-
      coaddDriver.py /datasets/DC2/repoRun2.2i --rerun {rerun}/sfm:{rerun}/coadd
      --batch-type=slurm --mpiexec='-bind-to socket' --time 600 --cores 24
      --job coadd{filter}{tract} --id filter={filter} tract={tract} --selectId visit={visit};

  multiBandDriver:
    head_task: |
      #!/bin/bash -l
    multi: >-
      multiBandDriver.py /datasets/DC2/repoRun2.2i --rerun {rerun}/coadd:{rerun}/multi --batch-type=slurm --mpiexec='-bind-to socket'
      --job mt{tract}-{patch} --core 1 --time 45000 -c measureCoaddSources.propagateFlags.ccdName='detector'
      --id filter={filter_str} tract={tract} patch={patch_alt} --configfile /home/$USER/HSC/DC2/filter_config_multi.py;

  matchedVisitMetrics:
    head_task: |
      #!/bin/bash -l
      OPTIONS="-p normal -N 1 --ntasks-per-node=1 -t 24:00:00"
    multi: >-
      sbatch $OPTIONS
      --wrap="matchedVisitMetrics.py /datasets/DC2/repoRun2.2i/rerun/{rerun}/multi --output  /datasets/DC2/repoRun2.2i/rerun/{rerun}/validateDrp/matchedVisitMetrics/3828/{filter}
      --config  instrumentName='LSST-ImSim' datasetName='DC2' --id filter={filter} tract=3828 visit={visit} --configfile /home/$USER/HSC/DC2/filter_config_multi.py";
      sbatch $OPTIONS
      --wrap="matchedVisitMetrics.py /datasets/DC2/repoRun2.2i/rerun/{rerun}/multi --output  /datasets/DC2/repoRun2.2i/rerun/{rerun}/validateDrp/matchedVisitMetrics/3829/{filter}
      --config  instrumentName='LSST-ImSim' datasetName='DC2' --id filter={filter} tract=3829 visit={visit} --configfile /home/$USER/HSC/DC2/filter_config_multi.py";

#  matchedVisitMetrics: |
#    #!/bin/bash -l
#    #SBATCH -p normal
#    #SBATCH -N 1
#    #SBATCH --ntasks-per-node=1
#    #SBATCH -t 09:00:00
#    #SBATCH -J mat-{tract}-{filter}
#    #SBATCH --output=/datasets/DC2/repoRun2.2i/rerun/{rerun}/qaLogs/matchedVisitMetrics/matchedVisitMetrics-{tract}-{filter}-%j.log
#    #SBATCH --error=/datasets/DC2/repoRun2.2i/rerun/{rerun}/qaLogs/matchedVisitMetrics/matchedVisitMetrics-{tract}-{filter}-%j.log
#    srun matchedVisitMetrics.py /datasets/DC2/repoRun2.2i/rerun/{rerun}/multi --output  /datasets/DC2/repoRun2.2i/rerun/{rerun}/validateDrp/matchedVisitMetrics/{tract}/{filter}  --config instrumentName='LSST-ImSim' datasetName='DC2' --id filter={filter} tract={tract} visit={visit}


# Extra specs per task beyond the template
tasks_specs:
  empty

# Extnames for tasks
tasks_extname:
  makeSkyMap: '.sh'
  singleFrameDriver: '.sh'
  coaddDriver: '.sh'
  multiBandDriver: '.sh'
  matchedVisitMetrics: '.sh'

tasks_per_visit_tracts:
  - singleFrameDriver

tasks_per_tract_filter:
  - coaddDriver
  - matchedVisitMetrics
tasks_per_tract_patch:
  - multiBandDriver

tasks_per_task:
  - makeSkyMap

tasks_to_execute_ordered:
  - singleFrameDriver
  - makeSkyMap
  - coaddDriver
  - multiBandDriver
  - matchedVisitMetrics
